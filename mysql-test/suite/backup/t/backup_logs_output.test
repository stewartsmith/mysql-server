#
# Test backup log output options
#
# This test tests the --log-backup-output options for writing backup log
# information. The choices are FILE | TABLE | FILE,TABLE | NONE
#

--source include/not_embedded.inc

connect (con1,localhost,root,,,,);
--echo con1
connection con1;

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

--echo '---Checking backup logs when log_backup_output is NONE---'
--echo '---and the backup logs are turned off                 ---'

SET @@global.log_backup_output = 'NONE';
SET @@global.backup_history_log = 'OFF';
SET @@global.backup_progress_log = 'OFF';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

--disable_warnings
DROP DATABASE IF EXISTS bup_log;
--enable_warnings

--echo Create a database and back it up
CREATE DATABASE bup_log;
CREATE TABLE bup_log.t1(a INT);
INSERT INTO bup_log.t1 VALUES (1), (2), (3);

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
--file_exists $MYSQLTEST_VARDIR/master-data/backup_history.log
--file_exists $MYSQLTEST_VARDIR/master-data/backup_progress.log

--error 0,1
--remove_file $MYSQLTEST_VARDIR/master-data/bup_log.bak

--echo '---Checking backup logs when log_backup_output is TABLE---'

SET @@global.log_backup_output = 'TABLE';

--echo turning backup logs back on
SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'ON';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
--file_exists $MYSQLTEST_VARDIR/master-data/backup_history.log
--file_exists $MYSQLTEST_VARDIR/master-data/backup_progress.log

--error 0,1
--remove_file $MYSQLTEST_VARDIR/master-data/bup_log.bak

--echo '---Checking backup logs when log_backup_output is TABLE---'
--echo '---and the progress log is turned off                   ---'

SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'OFF';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
--file_exists $MYSQLTEST_VARDIR/master-data/backup_history.log
--file_exists $MYSQLTEST_VARDIR/master-data/backup_progress.log

--error 0,1
--remove_file $MYSQLTEST_VARDIR/master-data/bup_log.bak

--echo '---Checking backup logs when log_backup_output is TABLE---'
--echo '---and the history log is turned off                 ---'

SET @@global.backup_history_log = 'OFF';
SET @@global.backup_progress_log = 'ON';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
--file_exists $MYSQLTEST_VARDIR/master-data/backup_history.log
--file_exists $MYSQLTEST_VARDIR/master-data/backup_progress.log

--error 0,1
--remove_file $MYSQLTEST_VARDIR/master-data/bup_log.bak

--echo '---Checking backup logs when log_backup_output is FILE---'

SET @@global.log_backup_output = 'FILE';

--echo turning backup logs back on
SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'ON';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;

#
# BUG#33364 - uncomment when purge command is implemented
#
# Purge the backup logs
#PURGE BACKUP LOGS;

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
--file_exists $MYSQLTEST_VARDIR/master-data/backup_history.log
--file_exists $MYSQLTEST_VARDIR/master-data/backup_progress.log

#
# BUG#33364 - uncomment when purge command is implemented
#
# Check contents of logs for data. 
#--error 0
#--exec grep -q "BACKUP DATABASE bup_log TO 'bup_log.bak'" $MYSQLTEST_VARDIR/master-data/backup_history.log
#--error 0
#--exec grep -q "complete" $MYSQLTEST_VARDIR/master-data/backup_progress.log

--error 0,1
--remove_file $MYSQLTEST_VARDIR/master-data/bup_log.bak

--echo '---Checking backup logs when log_backup_output is TABLE, FILE---'

SET @@global.log_backup_output = 'TABLE,FILE';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;

#
# BUG#33364 - uncomment when purge command is implemented
#
# Purge the backup logs
#PURGE BACKUP LOGS;

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
--file_exists $MYSQLTEST_VARDIR/master-data/backup_history.log
--file_exists $MYSQLTEST_VARDIR/master-data/backup_progress.log

#
# BUG#33364 - uncomment when purge command is implemented
#
# Check contents of logs for data. 
#--error 0
#--exec grep -q "BACKUP DATABASE bup_log TO 'bup_log.bak'" $MYSQLTEST_VARDIR/master-data/backup_history.log
#--error 0
#--exec grep -q "complete" $MYSQLTEST_VARDIR/master-data/backup_progress.log

--error 0,1
--remove_file $MYSQLTEST_VARDIR/master-data/bup_log.bak

--echo Cleanup
DROP DATABASE bup_log;

SET @@global.log_backup_output = 'TABLE';

--error 0,1
--remove_file $MYSQLTEST_VARDIR/master-data/bup_log.bak

