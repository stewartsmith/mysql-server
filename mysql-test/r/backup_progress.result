
Checking character set for backup tables 

SELECT column_name, character_set_name 
FROM information_schema.columns 
WHERE table_name LIKE 'online_backup' 
AND character_set_name LIKE 'utf8' 
ORDER BY column_name;
column_name	character_set_name
backup_file	utf8
backup_state	utf8
binlog_file	utf8
command	utf8
drivers	utf8
host_or_server_name	utf8
operation	utf8
username	utf8
user_comment	utf8

SELECT column_name, character_set_name 
FROM information_schema.columns 
WHERE table_name LIKE 'online_backup_progress' 
AND character_set_name LIKE 'utf8' 
ORDER BY column_name;
column_name	character_set_name
notes	utf8
object	utf8

Now starting real tests

SET DEBUG_SYNC= 'reset';
DROP DATABASE IF EXISTS backup_progress;
DROP TABLE IF EXISTS backup_progress.t1_res;
CREATE DATABASE backup_progress;
con1: Create table and new users.
CREATE TABLE backup_progress.t1 (a char(30)) ENGINE=MYISAM;
CREATE TABLE backup_progress.t2 (a char(30)) ENGINE=INNODB;
CREATE TABLE backup_progress.t3 (a char(30)) ENGINE=MEMORY;
CREATE TABLE backup_progress.t1_res (id INT) ENGINE=MEMORY;
INSERT INTO backup_progress.t1 VALUES ("01 Test #1 - progress");
INSERT INTO backup_progress.t1 VALUES ("02 Test #1 - progress");
INSERT INTO backup_progress.t1 VALUES ("03 Test #1 - progress");
INSERT INTO backup_progress.t1 VALUES ("04 Test #1 - progress");
INSERT INTO backup_progress.t1 VALUES ("05 Test #1 - progress");
INSERT INTO backup_progress.t1 VALUES ("06 Test #1 - progress");
INSERT INTO backup_progress.t1 VALUES ("07 Test #1 - progress");
INSERT INTO backup_progress.t2 VALUES ("01 Test #1 - progress");
INSERT INTO backup_progress.t2 VALUES ("02 Test #1 - progress");
INSERT INTO backup_progress.t2 VALUES ("03 Test #1 - progress");
INSERT INTO backup_progress.t2 VALUES ("04 Test #1 - progress");
INSERT INTO backup_progress.t2 VALUES ("05 Test #1 - progress");
INSERT INTO backup_progress.t2 VALUES ("06 Test #1 - progress");
INSERT INTO backup_progress.t3 VALUES ("01 Test #1 - progress");
INSERT INTO backup_progress.t3 VALUES ("02 Test #1 - progress");
INSERT INTO backup_progress.t3 VALUES ("03 Test #1 - progress");
INSERT INTO backup_progress.t3 VALUES ("04 Test #1 - progress");
Do backup of database
con2: Activate sync points for the backup statement.
SET DEBUG_SYNC= 'after_backup_log_init     SIGNAL started   WAIT_FOR do_run';
SET DEBUG_SYNC= 'after_backup_start_backup SIGNAL phase1    WAIT_FOR backup';
SET DEBUG_SYNC= 'after_backup_validated    SIGNAL validated WAIT_FOR do_phase2';
SET DEBUG_SYNC= 'after_backup_binlog       SIGNAL phase2    WAIT_FOR finish';
con2: Send backup command.
BACKUP DATABASE backup_progress to 'backup_progress_orig.bak';
con1: Wait for the backup to be started.
SET DEBUG_SYNC= 'now WAIT_FOR started';
con1: Display progress
SELECT MAX(backup_id) INTO @bup_id FROM mysql.online_backup WHERE command LIKE "BACKUP DATABASE backup_progress%";
INSERT INTO backup_progress.t1_res (id) VALUES (@bup_id);
SELECT backup_state FROM mysql.online_backup AS ob JOIN backup_progress.t1_res as t1 ON ob.backup_id = t1.id;
backup_state
starting
con1: Let backup step to running state.
SET DEBUG_SYNC= 'now SIGNAL do_run WAIT_FOR phase1';
con1: Display progress
SELECT backup_state FROM mysql.online_backup AS ob JOIN backup_progress.t1_res as t1 ON ob.backup_id = t1.id;
backup_state
running
con1: Let backup do the backup phase1.
SET DEBUG_SYNC= 'now SIGNAL backup WAIT_FOR validated';
con1: Display progress
SELECT backup_state FROM mysql.online_backup AS ob JOIN backup_progress.t1_res as t1 ON ob.backup_id = t1.id;
backup_state
validity point
con1: Let backup do the backup phase2.
SET DEBUG_SYNC= 'now SIGNAL do_phase2 WAIT_FOR phase2';
con1: Display progress
SELECT backup_state FROM mysql.online_backup AS ob JOIN backup_progress.t1_res as t1 ON ob.backup_id = t1.id;
backup_state
running
con1: Let backup finish.
SET DEBUG_SYNC= 'now SIGNAL finish';
con2: Finish backup command
backup_id
#
SELECT ob.* FROM mysql.online_backup AS ob JOIN backup_progress.t1_res AS t1 ON ob.backup_id = t1.id;;
backup_id	#
process_id	#
binlog_pos	#
binlog_file	#
backup_state	complete
operation	backup
error_num	0
num_objects	4
total_bytes	3977
validity_point_time	#
start_time	#
stop_time	#
host_or_server_name	localhost
username	root
backup_file	#
user_comment	
command	BACKUP DATABASE backup_progress to 'backup_progress_orig.bak'
drivers	MyISAM, Default, Snapshot
SELECT obp.* FROM mysql.online_backup_progress AS obp JOIN backup_progress.t1_res AS t1 ON obp.backup_id = t1.id;
backup_id	object	start_time	stop_time	total_bytes	progress	error_num	notes
#	backup kernel	#	#	0	0	0	starting
#	backup kernel	#	#	0	0	0	running
#	backup kernel	#	#	0	0	0	validity point
#	backup kernel	#	#	0	0	0	running
#	backup kernel	#	#	0	0	0	complete
Do restore of database
DELETE FROM backup_progress.t1_res;
con2: Activate sync points for the backup statement.
SET DEBUG_SYNC= 'after_backup_log_init      SIGNAL started WAIT_FOR do_run';
SET DEBUG_SYNC= 'after_backup_start_restore SIGNAL running WAIT_FOR finish';
con2: Send restore command.
RESTORE FROM 'backup_progress_orig.bak';
con1: Wait for the restore to be started.
SET DEBUG_SYNC= 'now WAIT_FOR started';
con1: Display progress
select * from backup_progress.t1_res;
id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.online_backup WHERE command LIKE "RESTORE FROM%";
INSERT INTO backup_progress.t1_res (id) VALUES (@bup_id);
SELECT backup_state FROM mysql.online_backup AS ob JOIN backup_progress.t1_res as t1 ON ob.backup_id = t1.id;
backup_state
starting
con1: Let restore step to running state.
SET DEBUG_SYNC= 'now SIGNAL do_run WAIT_FOR running';
con1: Display progress
SELECT backup_state FROM mysql.online_backup AS ob JOIN backup_progress.t1_res as t1 ON ob.backup_id = t1.id;
backup_state
running
con1: Let restore do its job and finish.
SET DEBUG_SYNC= 'now SIGNAL finish';
con2: Finish restore command
backup_id
#
DELETE FROM backup_progress.t1_res;
SELECT MAX(backup_id) INTO @bup_id FROM mysql.online_backup WHERE command LIKE "RESTORE FROM%";
INSERT INTO backup_progress.t1_res (id) VALUES (@bup_id);
SELECT ob.* FROM mysql.online_backup AS ob JOIN backup_progress.t1_res AS t1 ON ob.backup_id = t1.id;;
backup_id	#
process_id	#
binlog_pos	#
binlog_file	#
backup_state	complete
operation	restore
error_num	0
num_objects	4
total_bytes	1489
validity_point_time	#
start_time	#
stop_time	#
host_or_server_name	localhost
username	root
backup_file	#
user_comment	
command	RESTORE FROM 'backup_progress_orig.bak'
drivers	MyISAM, Default, Snapshot
SELECT obp.* FROM mysql.online_backup_progress AS obp JOIN backup_progress.t1_res AS t1 ON obp.backup_id = t1.id;
backup_id	object	start_time	stop_time	total_bytes	progress	error_num	notes
#	backup kernel	#	#	0	0	0	starting
#	backup kernel	#	#	0	0	0	running
#	backup kernel	#	#	0	0	0	complete
SET DEBUG_SYNC= 'reset';
DROP DATABASE backup_progress;
