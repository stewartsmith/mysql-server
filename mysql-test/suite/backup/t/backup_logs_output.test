#
# Test backup log output options
#
# This test tests the --log-backup-output options for writing backup log
# information. The choices are FILE | TABLE | FILE,TABLE | NONE
#

--source include/not_embedded.inc

call mtr.add_suppression ("Although a path was specified for the");

disable_query_log;
call mtr.add_suppression("mysqld.* File .*history.txt.*not found");
call mtr.add_suppression("mysqld.* File .*progress.txt.*not found");
call mtr.add_suppression("for backup logging");
enable_query_log;

connect (con1,localhost,root,,,,);
--echo con1
connection con1;

let $MYSQLD_DATADIR= `select @@datadir`;

--echo Clear the logs.
SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'ON';

#
# BUG#40219 No startup options for backup_*_logname.
#
--echo Display backup variable values from startup options file.
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
SHOW VARIABLES LIKE 'backup_history%';
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
SHOW VARIABLES LIKE 'backup_progress%';
SHOW VARIABLES LIKE 'log_backup_output';

--echo Set the backup log file names to default values.
SET @@global.backup_history_log_file = DEFAULT;
SET @@global.backup_progress_log_file = DEFAULT;
SET @@global.log_backup_output = 'TABLE';

FLUSH BACKUP LOGS;
PURGE BACKUP LOGS;

--echo See that the log names have been reset.
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
SHOW VARIABLES LIKE 'backup_history%';
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
SHOW VARIABLES LIKE 'backup_progress%';

SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

--echo '---Checking backup logs when log_backup_output is NONE---'
--echo '---and the backup logs are turned off                 ---'

SET @@global.log_backup_output = 'NONE';
SET @@global.backup_history_log = 'OFF';
SET @@global.backup_progress_log = 'OFF';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

--disable_warnings
DROP DATABASE IF EXISTS bup_log;
--enable_warnings

--echo Create a database and back it up
CREATE DATABASE bup_log;
CREATE TABLE bup_log.t1(a INT);
INSERT INTO bup_log.t1 VALUES (1), (2), (3);

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;

--file_exists $MYSQLD_DATADIR/backup_history.log
--file_exists $MYSQLD_DATADIR/backup_progress.log

--error 0,1
--remove_file $MYSQLD_DATADIR/bup_log.bak

--echo '---Checking backup logs when log_backup_output is TABLE---'

SET @@global.log_backup_output = 'TABLE';

--echo turning backup logs back on
SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'ON';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

FLUSH BACKUP LOGS;
PURGE BACKUP LOGS;

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
--file_exists $MYSQLD_DATADIR/backup_history.log
--file_exists $MYSQLD_DATADIR/backup_progress.log

--error 0,1
--remove_file $MYSQLD_DATADIR/bup_log.bak

--echo '---Checking backup logs when log_backup_output is TABLE---'
--echo '---and the progress log is turned off                   ---'

--echo Clear the logs.
SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'ON';
FLUSH BACKUP LOGS;
PURGE BACKUP LOGS;

SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'OFF';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
--file_exists $MYSQLD_DATADIR/backup_history.log
--file_exists $MYSQLD_DATADIR/backup_progress.log

--error 0,1
--remove_file $MYSQLD_DATADIR/bup_log.bak

--echo '---Checking backup logs when log_backup_output is TABLE---'
--echo '---and the history log is turned off                 ---'

--echo Clear the logs.
SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'ON';
FLUSH BACKUP LOGS;
PURGE BACKUP LOGS;

SET @@global.backup_history_log = 'OFF';
SET @@global.backup_progress_log = 'ON';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
PURGE BACKUP LOGS;

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

--file_exists $MYSQLD_DATADIR/backup_history.log
--file_exists $MYSQLD_DATADIR/backup_progress.log

--error 0,1
--remove_file $MYSQLD_DATADIR/bup_log.bak

--echo '---Checking backup logs when log_backup_output is FILE---'

SET @@global.log_backup_output = 'FILE';

--echo turning backup logs back on
SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'ON';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
PURGE BACKUP LOGS;

--file_exists $MYSQLD_DATADIR/backup_history.log
--file_exists $MYSQLD_DATADIR/backup_progress.log

# Check contents of logs for data. 
#--error 0
#--exec grep -q "BACKUP DATABASE bup_log TO 'bup_log.bak'" $MYSQLD_DATADIR/backup_history.log
#--error 0
#--exec grep -q "complete" $MYSQLD_DATADIR/backup_progress.log

--error 0,1
--remove_file $MYSQLD_DATADIR/bup_log.bak

--echo '---Checking backup logs when log_backup_output is TABLE, FILE---'

SET @@global.log_backup_output = 'TABLE,FILE';

--echo Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
SHOW VARIABLES LIKE 'backup_progress_log';
SHOW VARIABLES LIKE 'log_backup_output';

--replace_column 1 #
BACKUP DATABASE bup_log TO 'bup_log.bak';

--echo Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
SELECT count(*) FROM mysql.backup_progress;

FLUSH BACKUP LOGS;
--file_exists $MYSQLD_DATADIR/backup_history.log
--file_exists $MYSQLD_DATADIR/backup_progress.log

#
# BUG#33364 - uncomment when purge command is implemented
#
# Check contents of logs for data. 
#--error 0
#--exec grep -q "BACKUP DATABASE bup_log TO 'bup_log.bak'" $MYSQLD_DATADIR/backup_history.log
#--error 0
#--exec grep -q "complete" $MYSQLD_DATADIR/backup_progress.log

--error 0,1
--remove_file $MYSQLD_DATADIR/bup_log.bak

#
# BUG#40218 Default setting incorrect
#

SET GLOBAL backup_history_log=0;
SET GLOBAL backup_progress_log=0;

--echo Should show 'OFF'
SHOW VARIABLES LIKE 'backup%log';

SET GLOBAL backup_history_log=1;
SET GLOBAL backup_progress_log=1;

--echo Should show 'ON'
SHOW VARIABLES LIKE 'backup%log';

SET GLOBAL backup_history_log=OFF;
SET GLOBAL backup_progress_log=OFF;

--echo Should show 'OFF'
SHOW VARIABLES LIKE 'backup%log';

SET GLOBAL backup_history_log=DEFAULT;
SET GLOBAL backup_progress_log=DEFAULT;

--echo After set default still should show 'ON'
SHOW VARIABLES LIKE 'backup%log';

--echo Cleanup
DROP DATABASE bup_log;

SET @@global.log_backup_output = 'TABLE';

--error 0,1
--remove_file $MYSQLD_DATADIR/bup_log.bak

