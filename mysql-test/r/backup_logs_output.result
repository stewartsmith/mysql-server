con1
Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
Variable_name	Value
backup_history_log	ON
SHOW VARIABLES LIKE 'backup_progress_log';
Variable_name	Value
backup_progress_log	ON
SHOW VARIABLES LIKE 'log_backup_output';
Variable_name	Value
log_backup_output	TABLE
'---Checking backup logs when log_backup_output is NONE---'
'---and the backup logs are turned off                 ---'
SET @@global.log_backup_output = 'NONE';
SET @@global.backup_history_log = 'OFF';
SET @@global.backup_progress_log = 'OFF';
Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
Variable_name	Value
backup_history_log	OFF
SHOW VARIABLES LIKE 'backup_progress_log';
Variable_name	Value
backup_progress_log	OFF
SHOW VARIABLES LIKE 'log_backup_output';
Variable_name	Value
log_backup_output	NONE
TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;
Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
count(*)
0
SELECT count(*) FROM mysql.backup_progress;
count(*)
0
DROP DATABASE IF EXISTS bup_log;
Create a database and back it up
CREATE DATABASE bup_log;
CREATE TABLE bup_log.t1(a INT);
INSERT INTO bup_log.t1 VALUES (1), (2), (3);
BACKUP DATABASE bup_log TO 'bup_log.bak';
backup_id
#
Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
count(*)
0
SELECT count(*) FROM mysql.backup_progress;
count(*)
0
FLUSH BACKUP LOGS;
'---Checking backup logs when log_backup_output is TABLE---'
SET @@global.log_backup_output = 'TABLE';
turning backup logs back on
SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'ON';
Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
Variable_name	Value
backup_history_log	ON
SHOW VARIABLES LIKE 'backup_progress_log';
Variable_name	Value
backup_progress_log	ON
SHOW VARIABLES LIKE 'log_backup_output';
Variable_name	Value
log_backup_output	TABLE
TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;
BACKUP DATABASE bup_log TO 'bup_log.bak';
backup_id
#
Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
count(*)
1
SELECT count(*) FROM mysql.backup_progress;
count(*)
6
FLUSH BACKUP LOGS;
'---Checking backup logs when log_backup_output is TABLE---'
'---and the progress log is turned off                   ---'
SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'OFF';
Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
Variable_name	Value
backup_history_log	ON
SHOW VARIABLES LIKE 'backup_progress_log';
Variable_name	Value
backup_progress_log	OFF
SHOW VARIABLES LIKE 'log_backup_output';
Variable_name	Value
log_backup_output	TABLE
TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;
Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
count(*)
0
SELECT count(*) FROM mysql.backup_progress;
count(*)
0
BACKUP DATABASE bup_log TO 'bup_log.bak';
backup_id
#
Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
count(*)
1
SELECT count(*) FROM mysql.backup_progress;
count(*)
0
FLUSH BACKUP LOGS;
'---Checking backup logs when log_backup_output is TABLE---'
'---and the history log is turned off                 ---'
SET @@global.backup_history_log = 'OFF';
SET @@global.backup_progress_log = 'ON';
Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
Variable_name	Value
backup_history_log	OFF
SHOW VARIABLES LIKE 'backup_progress_log';
Variable_name	Value
backup_progress_log	ON
SHOW VARIABLES LIKE 'log_backup_output';
Variable_name	Value
log_backup_output	TABLE
TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;
Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
count(*)
0
SELECT count(*) FROM mysql.backup_progress;
count(*)
0
BACKUP DATABASE bup_log TO 'bup_log.bak';
backup_id
#
Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
count(*)
0
SELECT count(*) FROM mysql.backup_progress;
count(*)
6
FLUSH BACKUP LOGS;
'---Checking backup logs when log_backup_output is FILE---'
SET @@global.log_backup_output = 'FILE';
turning backup logs back on
SET @@global.backup_history_log = 'ON';
SET @@global.backup_progress_log = 'ON';
Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
Variable_name	Value
backup_history_log	ON
SHOW VARIABLES LIKE 'backup_progress_log';
Variable_name	Value
backup_progress_log	ON
SHOW VARIABLES LIKE 'log_backup_output';
Variable_name	Value
log_backup_output	FILE
TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;
BACKUP DATABASE bup_log TO 'bup_log.bak';
backup_id
#
Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
count(*)
0
SELECT count(*) FROM mysql.backup_progress;
count(*)
0
FLUSH BACKUP LOGS;
'---Checking backup logs when log_backup_output is TABLE, FILE---'
SET @@global.log_backup_output = 'TABLE,FILE';
Display backup variables
SHOW VARIABLES LIKE 'backup_history_log';
Variable_name	Value
backup_history_log	ON
SHOW VARIABLES LIKE 'backup_progress_log';
Variable_name	Value
backup_progress_log	ON
SHOW VARIABLES LIKE 'log_backup_output';
Variable_name	Value
log_backup_output	FILE,TABLE
TRUNCATE TABLE mysql.backup_history;
TRUNCATE TABLE mysql.backup_progress;
BACKUP DATABASE bup_log TO 'bup_log.bak';
backup_id
#
Show the size of the logs
SELECT count(*) FROM mysql.backup_history;
count(*)
1
SELECT count(*) FROM mysql.backup_progress;
count(*)
6
FLUSH BACKUP LOGS;
Cleanup
DROP DATABASE bup_log;
SET @@global.log_backup_output = 'TABLE';
