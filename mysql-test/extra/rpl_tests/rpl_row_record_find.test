# USAGE:
#   Before including this file the following variables should be set:
#     * $master_engine
#     * slave_engine
#
#   Example:
#
#     let $master_engine= Falcon;
#     let $slave_engine= MyISAM;
#
#     -- source extra/rpl_tests/rpl_row_record_find.test
# 


connection master;

--disable_warnings
DROP TABLE IF EXISTS t;
--enable_warnings

sync_slave_with_master;
connection master;

let $i= 10;
while($i)
{
  let $step= "";

  connection master;
  SET SQL_LOG_BIN=0;

  if (`SELECT $i=1`) {
    let $step= No keys ($master_engine -> $slave_engine);
    --echo ******* TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1)) engine= $slave_engine;
  }
  if (`SELECT $i=2`)
  { 
    let $step= One key ($master_engine -> $slave_engine);
    --echo ******* TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), key(c1)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), key(c1)) engine= $slave_engine;
  }
  if (`SELECT $i=3`)
  {
    let $step= One Composite key ($master_engine -> $slave_engine);
    --echo ****** TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), key(c1,c2)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), key(c1,c2)) engine= $slave_engine;
  }  
  if (`SELECT $i=4`)
  {
    let $step= One Unique key ($master_engine -> $slave_engine);
    --echo ****** TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), unique key(c1)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), unique key(c1)) engine= $slave_engine;
  }  
  if (`SELECT $i=5`)
  {
    let $step= One Composite Unique key ($master_engine -> $slave_engine);
    --echo ****** TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), unique key(c1,c2)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), unique key(c1,c2)) engine= $slave_engine;
  }  
  if (`SELECT $i=6`)
  {
    let $step= One Primary key ($master_engine -> $slave_engine);
    --echo ****** TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), primary key(c1)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), primary key(c1)) engine= $slave_engine;
  }  
  if (`SELECT $i=7`)
  {
    let $step= One Composite Primary Key ($master_engine -> $slave_engine);
    --echo ****** TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), primary key(c1,c2)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), primary key(c1,c2)) engine= $slave_engine;
  } 
  if (`SELECT $i=8`)
  {
    let $step= One Composite key with holes ($master_engine -> $slave_engine);
    --echo ****** TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), key(c1,c3)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), key(c1,c3)) engine= $slave_engine;
  }  
  if (`SELECT $i=9`)
  {
    let $step= One Composite Unique key with holes ($master_engine -> $slave_engine);
    --echo ****** TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), unique key(c1,c3)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), unique key(c1,c3)) engine= $slave_engine;
  }  
  if (`SELECT $i=10`)
  {
    let $step= One Composite Primary Key with holes ($master_engine -> $slave_engine);
    --echo ****** TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), primary key(c1,c3)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), primary key(c1,c3)) engine= $slave_engine;
  } 
  if (`SELECT $i=11`)
  { 
    let $step= One key ($master_engine -> $slave_engine);
    --echo ******* TEST: $step
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), key(c4)) engine= $master_engine;
    connection slave;
    --eval CREATE TABLE t (c1 int, c2 char(1), c3 char(1), c4 char(1), key(c4)) engine= $slave_engine;
  }


  connection master;
  SET SQL_LOG_BIN=1;

  connection master;
  INSERT INTO t VALUES (1, '1', '1', '1' );
  INSERT INTO t VALUES (4, '4', '4', '4' );
  INSERT INTO t VALUES (7, '7', '7', '7' );

  INSERT INTO t VALUES (9, '9', '9', NULL );

  INSERT INTO t VALUES (2, '1', '2', '2' );
  INSERT INTO t VALUES (3, '1', '3', '2' );
 
  sync_slave_with_master;

  connection master;
  UPDATE t SET c4 = '7';

  UPDATE t SET c4 = '5' WHERE c1 = 1;
  UPDATE t SET c2 = '5' WHERE c1 = 1;
  UPDATE t SET c1 = '5' WHERE c1 = 1;

  UPDATE t SET c4 = '8' WHERE c2 = '4';
  UPDATE t SET c1 = '8' WHERE c2 = '4';
  UPDATE t SET c2 = '8' WHERE c2 = '4';

  UPDATE t SET c3 = '0' WHERE c4 = NULL;
  UPDATE t SET c2 = '0' WHERE c4 = '0';

  UPDATE t SET c2 = '2' WHERE c4 = '2';

  sync_slave_with_master;

  let $diff_table_1=master:test.t;
  let $diff_table_2=slave:test.t;
  source include/diff_tables.inc;

  connection master;
  DELETE FROM t WHERE c1 = 7;
  DELETE FROM t WHERE c1 = 8;
  DELETE FROM t;

  sync_slave_with_master;

  let $diff_table_1=master:test.t;
  let $diff_table_2=slave:test.t;
  source include/diff_tables.inc;

  DROP TABLE t;
  sync_slave_with_master;

  dec $i;
}
