DROP DATABASE IF EXISTS adb;
DROP DATABASE IF EXISTS bdb;
# non-existent backup archive
RESTORE FROM 'test.bak';
ERROR HY000: File 'MYSQLTEST_VARDIR/mysqld.1/data/test.bak' not found (Errcode: #)
Get last backup_id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.backup_history
WHERE command LIKE "RESTORE FROM 'test%";
verify backup history and progress logs:
SELECT backup_state,operation, backup_file FROM mysql.backup_history
WHERE backup_id=@bup_id;
backup_state	operation	backup_file
error	restore	test.bak
SELECT notes FROM mysql.backup_progress
WHERE backup_id=@bup_id;
notes
starting
running
Can't read backup location 'test.bak'
error
CREATE DATABASE adb;
CREATE DATABASE bdb;
CREATE TABLE bdb.t1(a int) ENGINE=MEMORY;
# invalid location
BACKUP DATABASE adb TO '';
ERROR HY000: Malformed file path ''
SHOW WARNINGS;
Level	Code	Message
Error	#	Malformed file path ''
Warning	#	Operation aborted
Get last backup_id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.backup_history
WHERE command LIKE "BACKUP DATABASE adb TO%";
verify backup history and progress logs:
SELECT backup_state,operation, backup_file FROM mysql.backup_history
WHERE backup_id=@bup_id;
backup_state	operation	backup_file
error	backup	
SELECT notes FROM mysql.backup_progress
WHERE backup_id=@bup_id;
notes
starting
running
Malformed file path ''
error
# don't overwrite existing files
BACKUP DATABASE adb TO "bdb/t1.frm";
ERROR HY000: Can't create/write to file 'MYSQLTEST_VARDIR/mysqld.1/data/bdb/t1.frm' (Errcode: #)
SHOW WARNINGS;
Level	Code	Message
Error	#	Can't create/write to file 'MYSQLTEST_VARDIR/mysqld.1/data/bdb/t1.frm' (Errcode: #)
Error	#	Can't write to backup location 'bdb/t1.frm'
Warning	#	Operation aborted
BACKUP DATABASE adb TO "test.bak";
backup_id
#
SHOW WARNINGS;
Level	Code	Message
# don't overwrite existing backup image
BACKUP DATABASE adb TO "test.bak";
ERROR HY000: Can't create/write to file 'MYSQLTEST_VARDIR/mysqld.1/data/test.bak' (Errcode: #)
SHOW WARNINGS;
Level	Code	Message
Error	#	Can't create/write to file 'MYSQLTEST_VARDIR/mysqld.1/data/test.bak' (Errcode: #)
Error	#	Can't write to backup location 'test.bak'
Warning	#	Operation aborted
Get last backup_id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.backup_history
WHERE command LIKE "BACKUP DATABASE adb TO%";
verify backup history and progress logs for backup_state.
SELECT backup_state,operation, backup_file FROM mysql.backup_history
WHERE backup_id=@bup_id;
backup_state	operation	backup_file
error	backup	test.bak
SELECT notes FROM mysql.backup_progress
WHERE backup_id=@bup_id;
notes
starting
running
Can't write to backup location 'test.bak'
error
# non-existent database
DROP DATABASE IF EXISTS foo;
DROP DATABASE IF EXISTS bar;
BACKUP DATABASE foo TO 'test.bak';
ERROR 42000: Unknown database 'foo'
SHOW WARNINGS;
Level	Code	Message
Error	#	Unknown database 'foo'
Warning	#	Operation aborted
BACKUP DATABASE test,foo,bdb,bar TO 'test.bak';
ERROR 42000: Unknown database 'foo,bar'
SHOW WARNINGS;
Level	Code	Message
Error	#	Unknown database 'foo,bar'
Warning	#	Operation aborted
Get last backup_id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.backup_history
WHERE command LIKE "BACKUP DATABASE test,foo,bdb,bar TO%";
verify backup history and progress logs:
SELECT backup_state,operation,backup_file FROM mysql.backup_history
WHERE backup_id=@bup_id;
backup_state	operation	backup_file
error	backup	test.bak
SELECT notes FROM mysql.backup_progress
WHERE backup_id=@bup_id;
notes
starting
running
Unknown database 'foo,bar'
error
# repeated database
BACKUP DATABASE foo,test,bar,foo TO 'test.bak';
ERROR 42000: Not unique database: 'foo'
SHOW WARNINGS;
Level	Code	Message
Error	#	Not unique database: 'foo'
use adb;
create table t1 (a int);
create procedure p1() backup database test to 'test.bak';
ERROR 0A000: BACKUP is not allowed in stored procedures
create procedure p1() restore from 'test.bak';
ERROR 0A000: RESTORE is not allowed in stored procedures
create function f1() returns int backup database test to 'test.bak';
ERROR 0A000: BACKUP is not allowed in stored procedures
create function f1() returns int restore from 'test.bak';
ERROR 0A000: RESTORE is not allowed in stored procedures
create trigger tr1 before insert on t1 
for each row backup database test to 'test.bak';
ERROR 0A000: BACKUP is not allowed in stored procedures
create trigger tr1 before insert on t1 
for each row restore from 'test.bak';
ERROR 0A000: RESTORE is not allowed in stored procedures
create event ev1 on schedule every 1 day 
do backup database test to 'test.bak';
ERROR 0A000: BACKUP is not allowed in stored procedures
create event ev1 on schedule every 1 day 
do restore from 'test.bak';
ERROR 0A000: RESTORE is not allowed in stored procedures
DROP DATABASE adb;
DROP DATABASE bdb;
Backup of mysql, information_schema scenario 1
BACKUP DATABASE mysql TO 't.bak';
ERROR HY000: Database 'mysql' cannot be included in a backup
SHOW WARNINGS;
Level	Code	Message
Error	#	Database 'mysql' cannot be included in a backup
Warning	#	Operation aborted
Get last backup_id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.backup_history
WHERE command LIKE "BACKUP DATABASE mysql TO%";
verify backup history and progress logs:
SELECT backup_state,operation, backup_file FROM mysql.backup_history
WHERE backup_id=@bup_id;
backup_state	operation	backup_file
error	backup	t.bak
SELECT notes FROM mysql.backup_progress
WHERE backup_id=@bup_id;
notes
starting
running
Database 'mysql' cannot be included in a backup
error
Backup of mysql, information_schema scenario 2
BACKUP DATABASE information_schema TO 't.bak';
ERROR HY000: Database 'information_schema' cannot be included in a backup
SHOW WARNINGS;
Level	Code	Message
Error	#	Database 'information_schema' cannot be included in a backup
Warning	#	Operation aborted
Get last backup_id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.backup_history
WHERE command LIKE "BACKUP DATABASE information_schema TO%";
verify backup history and progress logs:
SELECT backup_state,operation, backup_file FROM mysql.backup_history
WHERE backup_id=@bup_id;
backup_state	operation	backup_file
error	backup	t.bak
SELECT  notes FROM mysql.backup_progress
WHERE backup_id=@bup_id;
notes
starting
running
Database 'information_schema' cannot be included in a backup
error
Backup of mysql, information_schema scenario 3
BACKUP DATABASE mysql, information_schema TO 't.bak';
ERROR HY000: Database 'mysql' cannot be included in a backup
SHOW WARNINGS;
Level	Code	Message
Error	#	Database 'mysql' cannot be included in a backup
Warning	#	Operation aborted
Get last backup_id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.backup_history
WHERE command LIKE "BACKUP DATABASE mysql, information_schema TO%";
verify backup history and progress logs:
SELECT backup_state,operation, backup_file FROM mysql.backup_history
WHERE backup_id=@bup_id;
backup_state	operation	backup_file
error	backup	t.bak
SELECT notes FROM mysql.backup_progress
WHERE backup_id=@bup_id;
notes
starting
running
Database 'mysql' cannot be included in a backup
error
Backup of mysql, information_schema scenario 4
BACKUP DATABASE mysql, test TO 't.bak';
ERROR HY000: Database 'mysql' cannot be included in a backup
SHOW WARNINGS;
Level	Code	Message
Error	#	Database 'mysql' cannot be included in a backup
Warning	#	Operation aborted
Get last backup_id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.backup_history
WHERE command LIKE "BACKUP DATABASE mysql, test TO%";
verify backup history and progress logs:
SELECT backup_state,operation, backup_file FROM mysql.backup_history
WHERE backup_id=@bup_id;
backup_state	operation	backup_file
error	backup	t.bak
SELECT notes FROM mysql.backup_progress
WHERE backup_id=@bup_id;
notes
starting
running
Database 'mysql' cannot be included in a backup
error
Backup of mysql, information_schema scenario 5
BACKUP DATABASE information_schema, test TO 't.bak';
ERROR HY000: Database 'information_schema' cannot be included in a backup
SHOW WARNINGS;
Level	Code	Message
Error	#	Database 'information_schema' cannot be included in a backup
Warning	#	Operation aborted
Backup of mysql, information_schema scenario 6
BACKUP DATABASE mysql, information_schema, test TO 't.bak';
ERROR HY000: Database 'mysql' cannot be included in a backup
SHOW WARNINGS;
Level	Code	Message
Error	#	Database 'mysql' cannot be included in a backup
Warning	#	Operation aborted
Get last backup_id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.backup_history
WHERE command LIKE "BACKUP DATABASE mysql, information_schema, test TO%";
verify backup history and progress logs:
SELECT backup_state,operation, backup_file FROM mysql.backup_history
WHERE backup_id=@bup_id;
backup_state	operation	backup_file
error	backup	t.bak
SELECT notes FROM mysql.backup_progress
WHERE backup_id=@bup_id;
notes
starting
running
Database 'mysql' cannot be included in a backup
error
Making copies of progress tables.
CREATE TABLE IF NOT EXISTS test.ob_copy LIKE mysql.backup_history;
CREATE TABLE IF NOT EXISTS test.obp_copy LIKE mysql.backup_progress;
CREATE DATABASE test_ob_error;
CREATE TABLE test_ob_error.t1 (col_a int);
INSERT INTO test_ob_error.t1 VALUES (1), (2), (3), (4), (5);
Backup the database;
BACKUP DATABASE test_ob_error TO 'ob_err.bak';
backup_id
#
DROP TABLE mysql.backup_history;
Backup the database;
BACKUP DATABASE test_ob_error TO 'ob_err.bak';
ERROR HY000: Can't open the backup logs as tables. Check 'mysql.backup_history' and 'mysql.backup_progress' or run mysql_upgrade to repair.
SHOW WARNINGS;
Level	Code	Message
Error	#	Table 'mysql.backup_history' doesn't exist
Error	#	Cannot create backup/restore execution context
Restoring the table
CREATE TABLE mysql.backup_history LIKE test.ob_copy;
DROP TABLE test.ob_copy;
DROP TABLE mysql.backup_progress;
Backup the database;
BACKUP DATABASE test_ob_error TO 'ob_err.bak';
ERROR HY000: Can't open the backup logs as tables. Check 'mysql.backup_history' and 'mysql.backup_progress' or run mysql_upgrade to repair.
SHOW WARNINGS;
Level	Code	Message
Error	#	Table 'mysql.backup_progress' doesn't exist
Error	#	Cannot create backup/restore execution context
Restoring the table
CREATE TABLE mysql.backup_progress LIKE test.obp_copy;
DROP TABLE test.obp_copy;
DROP DATABASE test_ob_error;

Bug#38624
Test that backup fails with error if database files are removed 
after backup starts
SET DEBUG_SYNC= 'reset';
DROP DATABASE IF EXISTS db1;
CREATE DATABASE db1;
start backup but stop just before adding metadata to backup image
SET DEBUG_SYNC= 'backup_before_write_preamble SIGNAL running WAIT_FOR db_will_fail';
BACKUP DATABASE db1 TO 'bup_db1.bak';
SET DEBUG_SYNC='now WAIT_FOR running';
delete database files so that check_db_dir_exists will fail in 
si_objects.cc @ DatabaseObj::do_serialize
SET DEBUG_SYNC='now SIGNAL db_will_fail';
Database has been deleted, backup will fail
ERROR HY000: Failed to obtain meta-data for database `db1`

Test that backup fails with error if a table used by 
a trigger cannot be opened
SET DEBUG_SYNC= 'reset';
DROP DATABASE IF EXISTS db1;
CREATE DATABASE db1;
CREATE TABLE db1.t1 (i int);
CREATE TABLE db1.t2 (v varchar (20));
CREATE TRIGGER db1.trg AFTER INSERT ON db1.t1 FOR EACH ROW
BEGIN
INSERT INTO db1.t2(v) VALUES ('Test trigger fired');   
END;||
SET DEBUG_SYNC= 'reset';
Setting debug point that will make backup fail when adding the
trigger metadata
SET SESSION DEBUG='+d,backup_fail_add_trigger';
BACKUP DATABASE db1 TO 'bup_db1.bak';
ERROR HY000: Failed to obtain meta-data for trigger `db1`.`trg`
Get last backup_id
SELECT MAX(backup_id) INTO @bup_id FROM mysql.backup_history
WHERE command LIKE "BACKUP DATABASE db1 TO%";
verify backup history and progress logs:
SELECT backup_state,operation, backup_file FROM mysql.backup_history
WHERE backup_id=@bup_id;
backup_state	operation	backup_file
error	backup	bup_db1.bak
SELECT notes FROM mysql.backup_progress
WHERE backup_id=@bup_id;
notes
starting
running
Failed to obtain meta-data for trigger `db1`.`trg`
error
SET DEBUG_SYNC= 'reset';
DROP DATABASE db1;
SET SESSION DEBUG='';

Done testing for Bug#38624

Testing RESTORE ... OVERWRITE functionality
See bug#34579

Initialize
CREATE DATABASE db1;
USE db1;
CREATE TABLE table1 (text VARCHAR(20));
INSERT INTO table1 VALUES ('Inserted before');

Backup database
BACKUP DATABASE db1 TO 'overwrite.bak';
backup_id
#

Insert more data and display
INSERT INTO table1 VALUES ('Inserted after');
SELECT * FROM table1;
text
Inserted before
Inserted after

Restore without OVERWRITE flag; will fail
RESTORE FROM 'overwrite.bak';
ERROR HY000: Database 'db1' already exists. Use OVERWRITE flag to overwrite.

Restore with OVERWRITE flag; will succeed
RESTORE FROM 'overwrite.bak' OVERWRITE;
backup_id
#

Show that inserted value 2 is not there
SELECT * FROM table1;
text
Inserted before
DROP DATABASE db1;

Restore after deleting db; will succeed
RESTORE FROM 'overwrite.bak';
backup_id
#

Show that inserted value 2 is not there
SELECT * FROM table1;
text
Inserted before
#
# Test error handling by backup code when injecting commit blocker error.
#
SET SESSION DEBUG='+d,backup_grl_fail';
BACKUP DATABASE db1 TO 'overwrite1.bak';
ERROR HY000: Backup failed to synchronize table images.
SET SESSION DEBUG='-d';

SET SESSION DEBUG='+d,backup_grl_block_commit_fail';
BACKUP DATABASE db1 TO 'overwrite1.bak';
ERROR HY000: Backup failed to synchronize table images.
SET SESSION DEBUG='-d';
#
# Test that BACKUP and RESTORE clears warning stack
#
BACKUP DATABASE db1 TO 'test.bak';
backup_id
#
# Generate warning - test.bak cannot be overwritten
BACKUP DATABASE db1 TO 'test.bak';
ERROR HY000: Can't create/write to file 'MYSQLTEST_VARDIR/mysqld.1/data/test.bak' (Errcode: #)
SHOW WARNINGS;
Level	Code	Message
Error	#	Can't create/write to file 'MYSQLTEST_VARDIR/mysqld.1/data/test.bak' (Errcode: #)
Error	#	Can't write to backup location 'test.bak'
Warning	#	Operation aborted

# Test that there are no warnings after successful BACKUP
BACKUP DATABASE db1 TO 'newtest.bak';
backup_id
#
SHOW WARNINGS;
Level	Code	Message

# Generate warning - test.bak cannot be overwritten
BACKUP DATABASE db1 TO 'test.bak';
ERROR HY000: Can't create/write to file 'MYSQLTEST_VARDIR/mysqld.1/data/test.bak' (Errcode: #)
SHOW WARNINGS;
Level	Code	Message
Error	#	Can't create/write to file 'MYSQLTEST_VARDIR/mysqld.1/data/test.bak' (Errcode: #)
Error	#	Can't write to backup location 'test.bak'
Warning	#	Operation aborted

# Test that there are no warnings after successful RESTORE
RESTORE FROM 'newtest.bak' OVERWRITE;
backup_id
#
SHOW WARNINGS;
Level	Code	Message

DROP DATABASE db1;
